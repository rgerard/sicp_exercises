(define (fast-expt b n a)
  (define (square n)
      (* n n)
  )
  
  (define (even? n)
    (= (remainder n 2) 0)
  )
    
  
  (cond ((= n 0) a)
        ((even? n) (fast-expt (square b) (/ n 2) a))
        (else (fast-expt b (- n 1) (* b a)))
  )
)
