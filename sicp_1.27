(define (test-carmichael-primes n)
  (define (even? n)
      (= (remainder n 2) 0)
  )

  (define (expmod base exp m)
    (cond ((= exp 0) 1)
          ((even? exp)
            (remainder (square (expmod base (/ exp 2) m))
                        m))
          (else (remainder (* base (expmod base (- exp 1) m))
                            m))
    )
  )
  
  (define (fermat-test n)
    (define (try-it a)
      (= (expmod a n n ) a))
    (try-it (+ 1 (random (- n 1))))
  )

  (define (fast-prime? n)
    (fermat-test n)
  )
  
  (cond ((fast-prime? n) true)
        (else false)
  )
)